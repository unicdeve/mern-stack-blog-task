{"version":3,"sources":["../../../src/modules/aritcle/aritcle.controller.js"],"names":["createEditArticle","req","res","form","formidable","IncomingForm","keepExtensions","parse","err","fields","files","status","json","error","errors","isValid","articleFields","user","id","console","log","articleId","Article","findOne","_id","then","article","image","data","newArticle","save","catch","general","findOneAndUpdate","$set","new","populate","userArticles","find","noArticle","getArticles","_","getArticleById","findById","params","getArticleImage","set","contentType","send"],"mappings":"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","file":"aritcle.controller.js","sourcesContent":["import formidable from 'formidable';\n\nimport Article from './aritcle.model';\nimport validateArticleInput from '../../validations/article';\nimport { formatArticleFields } from './article';\n\n// create or edit User Article\nexport const createEditArticle = (req, res) => {\n  let form = new formidable.IncomingForm();\n  form.keepExtensions = true;\n\n  form.parse(req, (err, fields, files) => {\n    if (err)\n      return res.status(400).json({\n        error: 'Image could not be uploaded'\n      });\n\n    // validate fields object here\n    const { errors, isValid } = validateArticleInput(fields);\n\n    // if (!isValid) return res.status(400).json(errors);\n\n    const articleFields = formatArticleFields(fields, files);\n    articleFields.user = req.user.id;\n\n    console.log('fields.articleId', fields.articleId);\n\n    Article.findOne({\n      _id: fields.articleId,\n      user: req.user.id\n    })\n      .then(article => {\n        if (!article) {\n          if (articleFields.image && articleFields.image.data) {\n            const newArticle = new Article(articleFields);\n            newArticle\n              .save()\n              .then(article => res.json(article))\n              .catch(err => {\n                console.log(err);\n                errors.general = 'There was an error saving your article';\n                return res.status(500).json(errors);\n              });\n          } else {\n            errors.image = 'Image is required';\n            return res.status(400).json(errors);\n          }\n        }\n        // update article\n        else {\n          Article.findOneAndUpdate(\n            { _id: fields.articleId },\n            { $set: articleFields },\n            { new: true }\n          )\n            .populate('user', 'email')\n            .then(article => res.json(article))\n            .catch(err => {\n              errors.general = 'There was an error updating your article';\n              return res.status(500).json(errors);\n            });\n        }\n      })\n      .catch(err => console.log(err));\n  });\n};\n\n// get current user's articles\nexport const userArticles = (req, res) => {\n  const errors = {};\n  Article.find({ user: req.user.id })\n    .populate('user', 'email')\n    .then(article => {\n      if (!article) {\n        errors.noArticle = 'You have no article yet.';\n        return res.status(400).json(errors);\n      }\n      return res.json(article);\n    })\n    .catch(() => {\n      errors.noArticle = 'An error occured while finding your article';\n      return res.status(400).json(errors);\n    });\n};\n\n// get all articles\nexport const getArticles = (_, res) => {\n  const errors = {};\n  Article.find({})\n    .populate('user', 'email')\n    .then(article => {\n      if (!article) {\n        errors.noArticle = 'You have no article yet.';\n        return res.status(400).json(errors);\n      }\n      return res.json(article);\n    })\n    .catch(() => {\n      errors.noArticle = 'An error occured while finding your article';\n      return res.status(400).json(errors);\n    });\n};\n\n// get article by ID\nexport const getArticleById = (req, res) => {\n  const errors = {};\n  Article.findById(req.params.articleId)\n    .populate('user', 'email')\n    .then(article => {\n      if (!article) {\n        errors.noArticle = 'You have no article yet.';\n        return res.status(400).json(errors);\n      }\n      return res.json(article);\n    })\n    .catch(() => {\n      errors.noArticle = 'An error occured while finding your article';\n      return res.status(400).json(errors);\n    });\n};\n\nexport const getArticleImage = (req, res) => {\n  Article.findById(req.params.articleId)\n    .populate('user', 'email')\n    .then(article => {\n      if (article) {\n        res.set('Content-Type', article.image.contentType);\n        return res.send(article.image.data);\n      }\n      return res.status(404).json({ error: 'Image not found' });\n    });\n};\n"]}